generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CLIENT
  TRAINER
  GYM_OWNER
}

model User {
  id           String         @id @default(uuid())
  name         String
  phoneNumber  String         @unique
  pictureUrl   String?
  role         Role
  weight       Float?          // only for clients
  height       Float?          // only for clients
  gender       String?         // only for clients
  ytLink       String?         // only for trainers and gym owners
  description  String?         // only for trainers and gym owners
  location     String?         // only for gym owners
  password     String
  memberships  Membership[]    // for linking gym memberships to users
  faculties    Membership[]    @relation("MembershipFaculties") // for linking trainers to memberships
  gyms         Gym[]           @relation("UserGym")
  ownedGyms    Gym[]           @relation("UserOwnedGyms") // Linking the user as a gym owner
  transactions Transaction[]   // Transactions for client users
}

model Membership {
  id          String     @id @default(uuid())
  title       String
  price       Float
  validity    String
  description String
  userId      String
  Owner       User       @relation(fields: [userId], references: [id])
  tags        String[]   // Array of activity tags
  faculties   User[]     @relation("MembershipFaculties") // linking trainers to the membership
}


model Gym {
  id          String     @id @default(uuid())
  name        String
  location    String
  ownerId     String     // references the gym owner
  owner       User       @relation(fields: [ownerId], references: [id], name: "UserOwnedGyms")
  users       User[]     @relation("UserGym")
}

model Transaction {
  id          String   @id @default(uuid())
  amount      Float
  description String?
  date        DateTime @default(now())
  clientId    String
  client      User     @relation(fields: [clientId], references: [id])
}
